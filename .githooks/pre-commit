#!/bin/bash

# Pre-commit hook for brandcn
# This script runs type checking, linting, testing, and build validation before commit

set -e  # Exit on any error

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${BLUE}[Pre-commit]${NC} $1"
}

print_success() {
    echo -e "${GREEN}✅ $1${NC}"
}

print_error() {
    echo -e "${RED}❌ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}⚠️  $1${NC}"
}

# Check if pnpm is available
if ! command -v pnpm &> /dev/null; then
    print_error "pnpm is required but not installed. Please install pnpm first."
    exit 1
fi

# 1. Type checking
# if pnpm exec tsc --noEmit; then
#     print_success "TypeScript type checking passed"
# else
#     print_error "TypeScript type checking failed"
#     exit 1
# fi

# 2. Linting
if pnpm run lint; then
    print_success "ESLint checks passed"
else
    if pnpm run lint:fix; then
        print_success "ESLint checks passed after fixing"
    else
        print_error "ESLint checks failed"
        exit 1
    fi
fi

# 3. Testing
if pnpm run test; then
    print_success "All tests passed"
else
    print_error "Tests failed"
    exit 1
fi

# 4. Build validation
if pnpm run build; then
    print_success "Build validation passed"
else
    print_error "Build validation failed"
    exit 1
fi

# 5. Versioning
# Read current version
version=$(cat packages/brandcn/package.json | grep -o '"version": "[^"]*"' | cut -d'"' -f4)

# Split version into components
IFS='.' read -r major minor patch <<< "$version"

# Increment patch version
new_patch=$((patch + 1))

# Create new version string
new_version="$major.$minor.$new_patch"

# Update version in package.json using jq
jq --arg new_version "$new_version" '.version = $new_version' packages/brandcn/package.json > packages/brandcn/package.json.tmp && mv packages/brandcn/package.json.tmp packages/brandcn/package.json

# Add package.json to the commit
git add packages/brandcn/package.json 

print_success "All pre-commit checks passed! 🎉"
echo ""
